---------------------------------------------------------------------------------
-- Build decisions
--  * Static or dynamic binaries
--  * Compiler versions
---------------------------------------------------------------------------------

executable-static: True
with-compiler: ghc-9.4.2


---------------------------------------------------------------------------------
-- Dependency specifications
--
-- Always allow a newer version of libraries which are tightly coupled to the GHC
-- compiler version. This allows the project to build with newer versions of the
-- compiler without having to tediously tinker with dependencies, both direct and
-- transitive.
--
-- Furthermore, always allow a newer version of libraries which have had a major
-- release due to a security or performance patch. Add a preference for using a
-- version greater than or equal to the patch.
---------------------------------------------------------------------------------

allow-newer:
    base,
    template-haskell,

preferences:
    aeson          >= 2.0.0,
    bytestring     >= 0.11.3,
    filepath       >= 1.4.100.0,
    mtl            >= 2.3,
    text           >= 2.0,


---------------------------------------------------------------------------------
-- Output paths
--
-- Place build output(s) in more accessible locations. Binaries should go in `bin`
-- and log files of the build/benchmarks/tests should go in `log`.
---------------------------------------------------------------------------------

logs-dir:         ./log
installdir:       ./bin
install-method:   copy
overwrite-policy: always


---------------------------------------------------------------------------------
-- Build metadata flags
--
-- Sensible alterations from the defaults to improve the build experience during
-- iterative development. Simultaneously, does not hinder release builds.
---------------------------------------------------------------------------------

haddock-html:             True
haddock-tests:            True
haddock-benchmarks:       True
haddock-internal:         True
haddock-hyperlink-source: True
jobs:                     $ncpus
keep-going:               True
minimize-conflict-set:    True


---------------------------------------------------------------------------------
-- Package flags (useful defaults)
--
-- Instruct all transative dependencies to be built *with both* optimization and
-- profiling enabled. This reduces rebuilds when debugging while not sacraficing
-- undue execution speed from imported code.
--
-- Contrastingly, *disable both* optimization and profiling when building the
-- current package's codebase. This improves the frequent recompilation speed
-- during iterative development.
--
-- Finally, enable all warnings and then prune out the undesirable ones. Having
-- the large litany of warnings enabled forces pre-emptive compatibility with
-- future breaking changes as well as improving overall code quality.
---------------------------------------------------------------------------------

-- Applies to *all* packages, not just dependencies...
package *
    benchmarks:    False
    documentation: True
    tests:         False
    optimization:  2

package efficient-implied-alignment
    benchmarks:    True
    documentation: True
    tests:         True
    optimization:  2
    ghc-options:   -j -Werror

packages: .
